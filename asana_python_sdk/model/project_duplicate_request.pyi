# coding: utf-8

"""
    Asana

    This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

    The version of the OpenAPI document: 1.0
    Created by: https://asana.com/support
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from asana_python_sdk import schemas  # noqa: F401


class ProjectDuplicateRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "name",
        }
        
        class properties:
            name = schemas.StrSchema
            team = schemas.StrSchema
            
            
            class include(
                schemas.StrSchema
            ):
                pass
        
            @staticmethod
            def schedule_dates() -> typing.Type['ProjectDuplicateRequestScheduleDates']:
                return ProjectDuplicateRequestScheduleDates
            __annotations__ = {
                "name": name,
                "team": team,
                "include": include,
                "schedule_dates": schedule_dates,
            }
    
    name: MetaOapg.properties.name
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["team"]) -> MetaOapg.properties.team: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["include"]) -> MetaOapg.properties.include: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["schedule_dates"]) -> 'ProjectDuplicateRequestScheduleDates': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "team", "include", "schedule_dates", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["team"]) -> typing.Union[MetaOapg.properties.team, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["include"]) -> typing.Union[MetaOapg.properties.include, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["schedule_dates"]) -> typing.Union['ProjectDuplicateRequestScheduleDates', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "team", "include", "schedule_dates", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, ],
        team: typing.Union[MetaOapg.properties.team, str, schemas.Unset] = schemas.unset,
        include: typing.Union[MetaOapg.properties.include, str, schemas.Unset] = schemas.unset,
        schedule_dates: typing.Union['ProjectDuplicateRequestScheduleDates', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProjectDuplicateRequest':
        return super().__new__(
            cls,
            *args,
            name=name,
            team=team,
            include=include,
            schedule_dates=schedule_dates,
            _configuration=_configuration,
            **kwargs,
        )

from asana_python_sdk.model.project_duplicate_request_schedule_dates import ProjectDuplicateRequestScheduleDates
